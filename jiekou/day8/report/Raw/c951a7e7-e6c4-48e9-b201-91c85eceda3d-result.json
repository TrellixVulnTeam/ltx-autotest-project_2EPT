{"name": "自定义的测试标题", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <allure报告相关的装饰器.Test_login object at 0x000002B1E0D02DC8>, accounts = 'bull', pwd = '123456', exp = '登录成功'\n\n    @allure.title('自定义的测试标题')\n    @allure.story('登录功能点')\n    @allure.severity('阻塞级别')\n    @pytest.mark.parametrize('accounts,pwd,exp', [('bull', '123456', '登录成功')])\n    def test_Decorator (self, accounts, pwd, exp):\n        # 登录接口的url\n        url = self.ip + '/mtx/index.php?s=/index/user/login.html'\n        headers = {'X-Requested-With': 'XMLHttpRequest'}\n        data = {'accounts': accounts, 'pwd': pwd}\n        r = requests.post(url=url, data=data, headers=headers)\n        # print(r.text)\n>       res = r.json()\n\nallure报告相关的装饰器.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nd:\\programdata\\anaconda3\\envs\\20201121\\lib\\site-packages\\requests\\models.py:900: in json\n    return complexjson.loads(self.text, **kwargs)\nd:\\programdata\\anaconda3\\envs\\20201121\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nd:\\programdata\\anaconda3\\envs\\20201121\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000002B1E0368148>\ns = '<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\\n<html><head>\\n<title>404 Not Found</title>\\n</head><body>\\n<h1>No...er.</p>\\n<hr>\\n<address>Apache/2.4.23 (Win64) PHP/7.0.10 Server at 121.42.15.146 Port 9090</address>\\n</body></html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nd:\\programdata\\anaconda3\\envs\\20201121\\lib\\json\\decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "accounts", "value": "'bull'"}, {"name": "pwd", "value": "'123456'"}, {"name": "exp", "value": "'登录成功'"}], "start": 1610780033902, "stop": 1610780033948, "uuid": "2ffe1e3c-91e1-4083-8d9c-a311a4252aa5", "historyId": "03eb1feff66691b17f08a47438fd9124", "testCaseId": "f41fc0090b15d3a0a8d6216103034cde", "fullName": "allure报告相关的装饰器.Test_login#test_Decorator", "labels": [{"name": "severity", "value": "阻塞级别"}, {"name": "story", "value": "登录功能点"}, {"name": "suite", "value": "allure报告相关的装饰器"}, {"name": "subSuite", "value": "Test_login"}, {"name": "host", "value": "LAPTOP-LIVE0232"}, {"name": "thread", "value": "11532-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allure报告相关的装饰器"}]}